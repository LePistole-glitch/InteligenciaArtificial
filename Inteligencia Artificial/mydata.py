# -*- coding: utf-8 -*-
"""tensorFlow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ks22ZY_M6gDPs1BGgFzyqZ5zcTYECwFG
"""

import tensorflow as tf
import time
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding,LSTM,Dense
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
import matplotlib.pyplot as plt
inicio = time.time()

#SET DE DATOS
from tensorflow.keras.datasets import imdb

#Cargar el conjuneto de datos de comentaris de peliculas
max_words = 10000 #numero max de palabras a considerando
maxlen = 100 #longitud axima de ecuencia de texto

(x_train, y_train),(x_test,y_test) = imdb.load_data(num_words=max_words)
x_train = pad_sequences(x_train, maxlen=maxlen)
x_test = pad_sequences(x_test, maxlen=maxlen)
#Construir el modelo de RNN
model = Sequential()
model.add(Embedding(max_words,128)) #CAPA DE ENTRADA
model.add(LSTM(64)) #CAPA INTERMEDIA
model.add(Dense(1,activation='sigmoid'))

#Compilar el modelo
model.compile(optimizer=Adam(learning_rate=0.001), loss="binary_crossentropy", metrics=['accuracy'])

#entrenar el modelo
model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=5,batch_size=64)

#evaluacion del modelo
loss,accurancy = model.evaluate(x_test, y_test)

print(accurancy * 100)

fin = time.time()

# Calcula el tiempo transcurrido
tiempo_transcurrido = fin - inicio

print(f"Tiempo de ejecuci√≥n: {tiempo_transcurrido} segundos")